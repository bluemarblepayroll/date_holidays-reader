# This file is autogenerated. Do not edit it by hand. Regenerate it with:
#   srb rbi gems

# typed: strict
#
# If you would like to make changes to this file, great! Please create the gem's shim here:
#
#   https://github.com/sorbet/sorbet-typed/new/master?filename=lib/acts_as_hashable/all/acts_as_hashable.rbi
#
# acts_as_hashable-1.3.0

module ActsAsHashable
end
module ActsAsHashable::Factory
  def array(*args, &block); end
  def factory; end
  def make(*args, &block); end
  def materialize_registry; end
  def register(*args); end
  def registry; end
  def type_key(key); end
  def typed_with; end
  extend Forwardable
end
module ActsAsHashable::HashRefinements
end
class ActsAsHashable::ConstantResolver
  def constantize(value); end
  def object_constant(value); end
end
class ActsAsHashable::TypeFactory
  def array(objects = nil); end
  def constant_resolver; end
  def initialize(registry = nil, type_key = nil); end
  def make(config = nil); end
  def registry; end
  def resolve_object_class(type); end
  def type_key; end
end
module ActsAsHashable::Hashable
  def array(object, nullable: nil); end
  def hydrate(hydrator, object, nullable); end
  def make(object, nullable: nil); end
end
class ActsAsHashable::Hashable::HydrationError < Caution::CauseInjectingError
end
module ActsAsHashable::DslHook
  def acts_as_hashable; end
  def acts_as_hashable_factory; end
end
class Object < BasicObject
  extend ActsAsHashable::DslHook
end
